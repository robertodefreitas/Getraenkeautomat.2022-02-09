@startuml
'https://plantuml.com/class-diagram

title
 Klassendiagramm
 <i>Domain Model</i>
end title

class Getraenkeautomat <root> {
'beide werden im Klassendiagramm nicht geschrieben, weil die 1.. beziehung das schon zeigt
'also, es ist klar dass die vorhanden sind
'warenbestand
'geldbestand
'+GetraenkUndWechselgeld kaufen(Getraenkewunsch auswahl, Muenze... einzahlung)
+kaufen()
+kaufenErfolgreich()
+kaufenFehlerhaft()
+wechselgeldBerechnenCents()
+befuelleGetraenkefach()
+befuelleMuenzfach()
+entleereGetraenkefaecher()
+entleereMuenzfaecher()
+summeAlleGetraenkeMitName()
+summeAlleGetraenkeInGetraenkefach()
+summeAlleMuenzenCentsKasse()
}


'WAREN

class Warenbestand <waren> {
'getraenkefaecher: List<Getraenkefach>
+neuesGetraenkefach()
+waehlenGetraenkefach()
+pruefenGetraenkewunschVorhanden()
+pruefenEinzahlungBetragAusreichend()
+bekommenGetraenkepreis()
+getraenkKonsumieren()
+befuelleGetraenkefach()
+befuelleGetraenkefaecher()
+summeAlleGetraenkeMitName()
+summeAlleGetraenkeInGetraenkefach()
}

class Getraenkefach <waren> {
fachNummer: Integer
'getraenke: List<Getraenk>
maxGetraenkeAnzhal: Integer
preis: Integer
+getraenkKonsumieren()
+isGetraenkefachLeer()
+isGetraenkefachVoll()
}

class Getraenk <waren> {
name: String
}


'KASSE

class Geldbestand <kasse> {
'muenzfaecher: List<Muenzfach>
+hinzufuegenMunzeInMuenzfach()
+befuelleMuenzfaecher()
+abziehenMunzeVonMuenzfach()
+abziehenMuenzenVonMuenzfaecher()
+entleereMuenzfaecher()
+summeAlleMuenzenCents()
'+umwandelnBetrag2Cents()
'+umwandelnCents2Betrag()
+umwandelnCents2Muenzen()
+umwandelnMuenzen2Cents()
+pruefenMunzfachLeer()
+pruefenMuenzenFuerWechselgeld()
+bekommenMuenztypVonCents()
}

class Muenzfach <kasse> {
fachNummer: Integer
'muenzen: List<Muenze>
maxMuenzenAnzahl: Integer
+erstellenMuenzfach()
+isMuenzfachLeer()
+isMuenzfachVoll()
+bekommenMuenztypVonCents()
}

class Muenze <kasse> {
muenze: Muenztyp
+bekommenCents()
+bekommenMuenztypVonCents()
}


'OHNE_BEZIEHUNG

class GetraenkUndWechselgeld <DTO> {
getraenk: Getraenk
wechselgeld: List<Muenze>
fehler: String
+kaufenErfolgreich()
+kaufenFehlerhaft()
}

class Getraenkewunsch <DTO> {
fachNummer: Integer
}

enum Muenztyp <kasse> {
ZEHN_CENT
ZWANZIG_CENT
FUENZIG_CENT
EIN_EURO
ZWEI_EURO
}


'BEZIEHUNGEN
'https://info-wsf.de/assoziation-aggregation-und-komposition/
'https://www.geeksforgeeks.org/association-composition-aggregation-java/
'Komposition
'Class --* Composition
'Aggregation
'Class --o Aggregation
'Assoziation
'Class --> Association
'Class --|> Extension

'-down->
'-right->
'-left->
'-up->
Getraenkeautomat *-down-> "1" Warenbestand
Warenbestand -down-> "1..n" Getraenkefach : ist sortiert in
Getraenkefach -down-> "0..n" Getraenk : lagert

Getraenkeautomat *-down-> "1" Geldbestand
Geldbestand -down-> "5" Muenzfach : ist sortiert in
Muenzfach -down-> "0..n" Muenze : lagert

@enduml